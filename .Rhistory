knitr::include_graphics("imagen-1.png")
install.packages("MASS")
install.packages("ISLR")
install.packages("psych")
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'broom','kableExtra''
), 'packages.bib')
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'broom','kableExtra'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
#definimos las variables de estudio
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
#Se crea un dataframe con los datos
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
library(kableExtra)
kable(datos,
booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para Hop Scotch Airlines" ) %>%
kable_styling(
)  %>%
kable_classic_2("hover")
knitr::opts_chunk$set(warning=FALSE, error=FALSE,cache=TRUE, message=FALSE, echo=TRUE)
knitr::opts_chunk$set(warning=FALSE, error=FALSE, cache=TRUE, message=FALSE, echo=TRUE)
bookdown:::mathquill()
addinslist:::addinslistAddin()
knitr::opts_chunk$set(warning=FALSE, error=FALSE, cache=TRUE, message=FALSE, echo=TRUE)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'broom','kableExtra'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
install.packages("stargazer")
# Se crea el gráfico 3d y se guarda en un objeto
mi_modelo_3d <- scatterplot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)', zlab='Pasajeros (en miles)')
# Se crea el gráfico 3d y se guarda en un objeto
library(scatterplot3d)
mi_modelo_3d <- scatterplot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)', zlab='Pasajeros (en miles)')
# Para agregar el plano usamos $plane3d( ) con argumento modelo ajustado
mi_modelo_3d$plane3d(modelo, lty.box="solid", col='mediumblue')
# Creación del modelo
modelo <- lm(pasajeros ~ publicidad + ingreso_nacional, data = datos)
# Mostrar un resumen del modelo
summary(modelo)
# Se crea el gráfico 3d y se guarda en un objeto
library(scatterplot3d)
mi_modelo_3d <- scatterplot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)', zlab='Pasajeros (en miles)')
# Para agregar el plano usamos $plane3d( ) con argumento modelo ajustado
mi_modelo_3d$plane3d(modelo, lty.box="solid", col='mediumblue')
knitr::include_graphics("imagen-1.png")
n = length(observaciones)
n <- length(observaciones)
n
sumat_yi <- colSums(observaciones)
n <- length(observaciones)
n
sumat_yi <- colSums(datos[pasajeros])
n <- length(observaciones)
n
sumat_yi <- colSums(pasajeros)
n <- length(observaciones)
n
sumat_yi <- sum(pasajeros)
sumat_yi
addinslist:::addinslistAddin()
knitr::opts_chunk$set(warning=FALSE, error=FALSE, cache=TRUE, message=FALSE, echo=TRUE)
knitr::opts_chunk$set(
echo = TRUE,
error = FALSE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
#definimos las variables de estudio
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
#Se crea un dataframe con los datos
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
library(kableExtra)
knitr::kable(datos,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para Hop Scotch Airlines" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
#definimos las variables de estudio
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
#Se crea un dataframe con los datos
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
addinslist:::addinslistAddin()
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Número total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Numero total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Número total de observaciones:", num_observaciones,
"Sumatoria de la columna de Y:", sum_y,
"Sumatoria de la columna de X1:", sum_x1,
"Sumatoria de la columna de X2:", sum_x2,
"Sumatoria de la columna de X1^2:", sum_x1_squared,
"Sumatoria de la columna de X1 * X2:", sum_x1_x2,
"Sumatoria de la columna de X1 * Y:", sum_x1_y,
"Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Numero total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de los cuadrados de la segunda variable independiente (X1^2)
sum_x2_squared <- sum(datos$`Ingreso Nacional`^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Numero total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X2^2:", sum_x2_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Definir el vector del lado derecho del sistema
B <- c(sum_y, sum_x1_y, sum_x2_y)
# Resolver el sistema de ecuaciones lineales
coefs_beta <- solve(A, B)
# Imprimir los coeficientes estimados
cat("Coeficientes estimados (beta0, beta1, beta2):", coefs_beta, "\n")
# Creación del modelo
modelo <- lm(pasajeros ~ publicidad + ingreso_nacional, data = datos)
# Mostrar un resumen del modelo
summary(modelo)
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Definir el vector del lado derecho del sistema
B <- c(sum_y, sum_x1_y, sum_x2_y)
# Resolver el sistema de ecuaciones lineales
coefs_beta <- solve(A, B)
# Imprimir los coeficientes estimados
cat("Coeficientes estimados (beta0, beta1, beta2):", coefs_beta, "\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Definir el vector del lado derecho del sistema
B <- c(sum_y, sum_x1_y, sum_x2_y)
# Resolver el sistema de ecuaciones lineales
coefs_beta <- solve(A, B)
# Imprimir los coeficientes estimados
cat("$$\n")
cat("\\hat{\\beta_{0}}= 8.015345 \\\\ \n")
cat("\\hat{\\beta_{1}}= 1.107798 \\\\ \n")
cat("\\hat{\\beta_{2}}= -1.225824 \\\\ \n")
cat("$$\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Definir el vector del lado derecho del sistema
B <- c(sum_y, sum_x1_y, sum_x2_y)
# Resolver el sistema de ecuaciones lineales
coefs_beta <- solve(A, B)
# Imprimir los coeficientes estimados
cat("Coeficientes estimados (beta0, beta1, beta2):", coefs_beta, "\n")
# Definición de las variables de estudio y creación del dataframe
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
# Creación del dataframe
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
library(kableExtra)
knitr::kable(datos,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para Hop Scotch Airlines" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
matriz_productos_cruzados <- t(x) %*% x
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
matriz_productos_cruzados <- t(x) %*% x
matriz_productos_cruzados
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
x
matriz_productos_cruzados <- t(x) %*% x
matriz_productos_cruzados
ident <-  rep(1,15)
x1 <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
x2 <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,x1, x2)
x
matriz_productos_cruzados <- t(x) %*% x
matriz_productos_cruzados
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
x
matriz_productos_cruzados <- t(x) %*% x
matriz_productos_cruzados
x_traspuesta_y <- t(x) %*% x
x_traspuesta_y
x_traspuesta_y <- t(x) %*% x
x_traspuesta_y
x_traspuesta_y <- t(x) %*% x
x_traspuesta_y
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
x
x_transpuesta_x <- t(x) %*% x
x_transpuesta_x
x_traspuesta_y <- t(x) %*% x
x_traspuesta_y
x_traspuesta_y <- t(x) %*% y
x_traspuesta_y <- t(x) %*% pasajeros
x_traspuesta_y
solve(x_traspuesta_x)
solve(x_transpuesta_x)
solve(x_transpuesta_x)
solve(x_transpuesta_x)
solve(x_transpuesta_x) %*% x_transpuesta_y
x_transpuesta_y <- t(x) %*% pasajeros
x_transpuesta_y
solve(x_transpuesta_x) %*% x_transpuesta_y
library(broom)
# Crear datos de ejemplo
set.seed(123)
datos <- data.frame(
y = rnorm(100),
x1 = rnorm(100),
x2 = rnorm(100)
)
# Ajustar un modelo de regresión lineal múltiple
modelo <- lm(y ~ x1 + x2, data = datos)
# Utilizar broom para obtener resúmenes y estadísticas
summary(modelo)
tidy(modelo)
glance(modelo)
augment(modelo)
library(broom)
# Creación del modelo
modelo <- lm(pasajeros ~ publicidad + ingreso_nacional, data = datos)
# Mostrar un resumen del modelo
summary(modelo)
tidy(modelo)
glance(modelo)
augment(modelo)
library(stargazer)
stargazer(modelo)
# NOT RUN {
## create summary statistics table for 'attitude' data frame
stargazer(attitude)
## list the content of the data frame 'attitude'
stargazer(attitude, summary=FALSE)
##  2 OLS models
linear.1 <- lm(rating ~ complaints + privileges + learning
+ raises + critical, data=attitude)
linear.2 <- lm(rating ~ complaints + privileges + learning, data=attitude)
## create an indicator dependent variable, and run a probit model
attitude$high.rating <- (attitude$rating > 70)
probit.model <- glm(high.rating ~ learning + critical + advance, data=attitude,
family = binomial(link = "probit"))
stargazer(linear.1, linear.2, probit.model, title="Regression Results")
## report ASCII text for a table with 90 percent confidence
## intervals reported on the same row as coefficients
## and omitting F statistics and the residual standard error
stargazer(linear.1, linear.2, probit.model, type="text",
title="Regression Results", single.row=TRUE,
ci=TRUE, ci.level=0.9, omit.stat=c("f", "ser"))
### re-order the models and only keep explanatory
### variables that contain "complaints", "learning",
### "raises" and "critical"; report these with standard
### errors, and put "learning" and "raises" before
### the other explanatory variables; of the summary
### statistics, only keep the number of observations
stargazer(probit.model, linear.1, linear.2, type="text",
keep=c("complaints","learning","raises","critical"),
keep.stat="n", order=c("learning", "raises"))
### apply a function to the coefficients and standard errors
### that will multiply them by ten; you can think of this
### as a change in units
multiply.by.10 <- function(x) (x * 10)
stargazer(probit.model, linear.1, linear.2,
apply.coef=multiply.by.10, apply.se=multiply.by.10)
### print out HTML code for a correlation matrix
correlation.matrix <- cor(attitude)
stargazer(correlation.matrix, type="html")
# }
# NOT RUN {
<!-- % Add one or more standard keywords, see file 'KEYWORDS' in the -->
install.packages("lmtest")
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'broom','kableExtra'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
