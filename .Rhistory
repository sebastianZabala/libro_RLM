modelo <- lm(y ~ x1 + x2, data = datos)
# Utilizar broom para obtener resúmenes y estadísticas
summary(modelo)
tidy(modelo)
glance(modelo)
augment(modelo)
library(broom)
# Creación del modelo
modelo <- lm(pasajeros ~ publicidad + ingreso_nacional, data = datos)
# Mostrar un resumen del modelo
summary(modelo)
tidy(modelo)
glance(modelo)
augment(modelo)
library(stargazer)
stargazer(modelo)
# NOT RUN {
## create summary statistics table for 'attitude' data frame
stargazer(attitude)
## list the content of the data frame 'attitude'
stargazer(attitude, summary=FALSE)
##  2 OLS models
linear.1 <- lm(rating ~ complaints + privileges + learning
+ raises + critical, data=attitude)
linear.2 <- lm(rating ~ complaints + privileges + learning, data=attitude)
## create an indicator dependent variable, and run a probit model
attitude$high.rating <- (attitude$rating > 70)
probit.model <- glm(high.rating ~ learning + critical + advance, data=attitude,
family = binomial(link = "probit"))
stargazer(linear.1, linear.2, probit.model, title="Regression Results")
## report ASCII text for a table with 90 percent confidence
## intervals reported on the same row as coefficients
## and omitting F statistics and the residual standard error
stargazer(linear.1, linear.2, probit.model, type="text",
title="Regression Results", single.row=TRUE,
ci=TRUE, ci.level=0.9, omit.stat=c("f", "ser"))
### re-order the models and only keep explanatory
### variables that contain "complaints", "learning",
### "raises" and "critical"; report these with standard
### errors, and put "learning" and "raises" before
### the other explanatory variables; of the summary
### statistics, only keep the number of observations
stargazer(probit.model, linear.1, linear.2, type="text",
keep=c("complaints","learning","raises","critical"),
keep.stat="n", order=c("learning", "raises"))
### apply a function to the coefficients and standard errors
### that will multiply them by ten; you can think of this
### as a change in units
multiply.by.10 <- function(x) (x * 10)
stargazer(probit.model, linear.1, linear.2,
apply.coef=multiply.by.10, apply.se=multiply.by.10)
### print out HTML code for a correlation matrix
correlation.matrix <- cor(attitude)
stargazer(correlation.matrix, type="html")
# }
# NOT RUN {
<!-- % Add one or more standard keywords, see file 'KEYWORDS' in the -->
install.packages("lmtest")
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'broom','kableExtra'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
addinslist:::addinslistAddin()
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
solve(x_transpuesta_x) %*% x_transpuesta_y
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
x
x_transpuesta_x <- t(x) %*% x
x_transpuesta_x
matriz_estimaciones_beta <- solve(x_transpuesta_x) %*% x_transpuesta_y
matriz_estimaciones_beta
inv_x_transpuesta_x <- solve(x_transpuesta_x)
matriz_estimaciones_beta <- solve(x_transpuesta_x) %*% x_transpuesta_y
matriz_estimaciones_beta
inv_x_transpuesta_x <- solve(x_transpuesta_x)
inv_x_transpuesta_x
matriz_estimaciones_beta <- solve(x_transpuesta_x) %*% x_transpuesta_y
matriz_estimaciones_beta
ggplot(augment(modelo), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "Residuos")
library(ggplot2)
ggplot(augment(modelo), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "Residuos")
ggThemeAssist:::ggThemeAssistAddin()
esquisse:::esquisser()
gptstudio:::addin_chatgpt()
inserttable:::insert_table()
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/model', force=TRUE)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/model', force=TRUE)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
length(y)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
length(x1)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
length(x1)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
length(x2)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos <- data.frame(y,x1,x2)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
datos2 <- data.frame(y,x1,x2)
datos2
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la compañia manufacturera" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la compañia manufacturera" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la compañia manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la compañia manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
library(utf-8)
library(utf8)
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la compañia manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la empresa manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
modelo2 <- lm(y ~ x1 + x2, data=datos2)
residuos <- rstandard(modelo)
residuos
valor_ajustado <- fitted(modelo)
valor_ajustado
plot(valor_ajustado,residuos)
qqnorm(residuos)
inv_x_transpuesta_x <- solve(x_transpuesta_x)
inv_x_transpuesta_x
matriz_estimaciones_beta <- solve(x_transpuesta_x) %*% x_transpuesta_y
matriz_estimaciones_beta
datos_t <- data.frame(observaciones,pasajeros,valor_ajustado,residuos)
residuos <- rstandard(modelo)
valor_ajustado <- fitted(modelo)
residuos <- rstandard(modelo)
valor_ajustado <- fitted
datos_t <- data.frame(observaciones,pasajeros,valor_ajustado,residuos)
residuos <- rstandard(modelo)
valor_ajustado <- fitted(modelo)
datos_t <- data.frame(observaciones,pasajeros,valor_ajustado,residuos)
knitr::kable(datos_t,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la empresa manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
residuos <- rstandard(modelo)
valor_ajustado <- fitted(modelo)
datos_t <- data.frame(observaciones,pasajeros,valor_ajustado,residuos)
knitr::kable(datos_t,booktabs = TRUE, align = "c") %>%
kable_styling()  %>%
kable_classic_2("hover")
# Definición de las variables de estudio y creación del dataframe
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
# Creación del dataframe
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
library(kableExtra)
knitr::kable(datos,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para Hop Scotch Airlines" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
knitr::include_graphics("imagen-1.png")
# Definición de las variables de estudio y creación del dataframe
observaciones <- 1:15
pasajeros <- c(15,17,13,23,16,21,14,20,24,17,16,18,23,25,16)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
# Creación del dataframe
datos <- data.frame(observaciones,pasajeros,publicidad,ingreso_nacional)
colnames(datos) <- c("Observaciones","Pasajeros", "Publicidad", "Ingreso Nacional")
library(kableExtra)
knitr::kable(datos,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para Hop Scotch Airlines" ) %>%
kable_styling()  %>%
kable_classic_2("hover")
library(scatterplot3d)
#Se crea un gráfico en 3D para explorar la relación entre las variables
scatterplot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)', zlab='Pasajeros (en miles)')
library(plotly)
plot_ly(x=publicidad, y=ingreso_nacional, z=pasajeros, type="scatter3d", color=pasajeros) %>%
layout(scene = list(xaxis = list(title = 'Publicidad (en miles de dolares)'),
yaxis = list(title = 'Ingreso nacional (en billones de dolares)'),
zaxis = list(title = 'Pasajeros (en miles)')))
library(rgl)
plot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, type='s', col='green',
xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)',
zlab='Pasajeros (en miles)')
library(broom)
# Ajustar un modelo de regresión lineal múltiple
modelo <- lm(pasajeros ~ publicidad + ingreso_nacional, data = datos)
# Utilizar el paquete broom para obtener resúmenes y estadísticas del modelo
summary(modelo)
tidy(modelo)
glance(modelo)
augment(modelo)
# Se crea el gráfico 3d y se guarda en un objeto
library(scatterplot3d)
mi_modelo_3d <- scatterplot3d(x=publicidad, y=ingreso_nacional, z=pasajeros, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='Publicidad (en miles de dolares)',
ylab='Ingreso nacional (en billones de dolares)', zlab='Pasajeros (en miles)')
# Para agregar el plano usamos $plane3d( ) con argumento modelo ajustado
mi_modelo_3d$plane3d(modelo, lty.box="solid", col='mediumblue')
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de los cuadrados de la segunda variable independiente (X1^2)
sum_x2_squared <- sum(datos$`Ingreso Nacional`^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Numero total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X2^2:", sum_x2_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
# Definir la matriz de coeficientes (lado izquierdo del sistema)
n <- length(pasajeros)
A <- matrix(c(n, sum_x1, sum_x2, sum_x1, sum_x1_squared, sum_x1_x2, sum_x2, sum_x1_x2, sum_x2_squared), ncol = 3)
# Definir el vector del lado derecho del sistema
B <- c(sum_y, sum_x1_y, sum_x2_y)
# Resolver el sistema de ecuaciones lineales
coefs_beta <- solve(A, B)
# Imprimir los coeficientes estimados
cat("Coeficientes estimados (beta0, beta1, beta2):", coefs_beta, "\n")
identidad <-  rep(1,15)
publicidad <- c(10,12,8,17,10,15,10,14,19,10,11,13,16,10,12)
ingreso_nacional <- c(2.4,2.72,2.08,3.68,2.56,3.36,2.24,3.2,3.84,2.72,2.07,2.33,2.98,1.94,2.17)
x <- cbind(identidad,publicidad, ingreso_nacional)
x
x_transpuesta_x <- t(x) %*% x
x_transpuesta_x
x_transpuesta_y <- t(x) %*% pasajeros
x_transpuesta_y
inv_x_transpuesta_x <- solve(x_transpuesta_x)
inv_x_transpuesta_x
matriz_estimaciones_beta <- solve(x_transpuesta_x) %*% x_transpuesta_y
matriz_estimaciones_beta
residuos <- rstandard(modelo)
valor_ajustado <- fitted(modelo)
datos_t <- data.frame(observaciones,pasajeros,valor_ajustado,residuos)
knitr::kable(datos_t,booktabs = TRUE, align = "c") %>%
kable_styling()  %>%
kable_classic_2("hover")
y <- c(13.59,15.71,15.97,20.21,24.64,21.25,18.94,14.85,15.18,16.30,15.93,16.45,19.02,18.16,18.57,17.01,18.03,19.22,21.12,23.32)
x1 <- c(87,78,81,65,51,62,70,91,94,100,102,82,74,85,86,90,93,81,72,60)
x2 <- c(80,95,106,115,128,128,115,92,93,111,116,117,127,133,135,136,140,142,148,150)
datos2 <- data.frame(y,x1,x2)
library(kableExtra)
knitr::kable(datos2,booktabs = TRUE, align = "c", caption = "Datos de la regresion  multiple para la empresa manufacturera") %>%
kable_styling()  %>%
kable_classic_2("hover")
modelo2 <- lm(y ~ x1 + x2, data=datos2)
# Número total de observaciones
num_observaciones <- nrow(datos)
# Sumatoria de la columna de la variable dependiente (Y)
sum_y <- sum(datos$Pasajeros)
# Sumatoria de la columna de la variable dependiente al cuadrado (Y)
sum_y_squared <- sum(datos$Pasajeros^2)
# Sumatoria de la columna de la primera variable independiente (X1: Publicidad)
sum_x1 <- sum(datos$Publicidad)
# Sumatoria de la columna de la segunda variable independiente (X2: Ingreso Nacional)
sum_x2 <- sum(datos$`Ingreso Nacional`)
# Sumatoria de la columna de los cuadrados de la primera variable independiente (X1^2)
sum_x1_squared <- sum(datos$Publicidad^2)
# Sumatoria de la columna de los cuadrados de la segunda variable independiente (X1^2)
sum_x2_squared <- sum(datos$`Ingreso Nacional`^2)
# Sumatoria de la columna de la multiplicación entre X1 y X2
sum_x1_x2 <- sum(datos$Publicidad * datos$`Ingreso Nacional`)
# Sumatoria de la columna de la multiplicación entre X1 y Y
sum_x1_y <- sum(datos$Publicidad * datos$Pasajeros)
# Sumatoria de la columna de la multiplicación entre X2 y Y
sum_x2_y <- sum(datos$`Ingreso Nacional` * datos$Pasajeros)
# Imprimir los resultados
cat("Numero total de observaciones:", num_observaciones, "\n")
cat("Sumatoria de la columna de Y:", sum_y, "\n")
cat("Sumatoria de la columna de Y al cuadrado:", sum_y_squared, "\n")
cat("Sumatoria de la columna de X1:", sum_x1, "\n")
cat("Sumatoria de la columna de X2:", sum_x2, "\n")
cat("Sumatoria de la columna de X1^2:", sum_x1_squared, "\n")
cat("Sumatoria de la columna de X2^2:", sum_x2_squared, "\n")
cat("Sumatoria de la columna de X1 * X2:", sum_x1_x2, "\n")
cat("Sumatoria de la columna de X1 * Y:", sum_x1_y, "\n")
cat("Sumatoria de la columna de X2 * Y:", sum_x2_y, "\n")
library(ggplot2)
ggplot(augment(modelo), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "Residuos")
library(ggplot2)
ggplot(augment(modelo), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "Residuos")
library(ggplot2)
ggplot(augment(modelo), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "Residuos")
ggplot(augment(modelo), aes(sample = .resid)) +
stat_qq() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +
labs(title = "Gráfico Q-Q de Residuos")
ggplot(augment(modelo), aes(sample = .resid)) +
stat_qq() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +
labs(title = "Gráfico Q-Q de Residuos")
library(car)  # Necesario para la función influencePlot
influencePlot(modelo, id.n = 3, main = "Gráfico de Influencia")
ggplot(augment(modelo), aes(sample = .resid)) +
stat_qq() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +
labs(title = "Gráfico Q-Q de Residuos")
library(ggplot2)
ggplot(augment(modelo), aes(x = .fitted, y = pasajeros)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuos vs. Valores Ajustados",
x = "Valores Ajustados",
y = "valores observados")
packages <- c(
'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'psych', 'DT', 'broom','kableExtra', 'GGally','plot3D', 'plot3Drgl',
)
packages <- c(
'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'psych', 'DT', 'broom','kableExtra', 'GGally','plot3D', 'plot3Drgl'
)
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'broom','kableExtra', 'DT'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
colorize <- function(x, color = "blue") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
colorize(R)
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'broom','kableExtra', 'DT'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
colorize <- function(x, color = "blue") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
#knitr::include_graphics("")
knitr::include_graphics("imagen-2.jpg")
knitr::opts_chunk$set(
echo=TRUE,
error=FALSE,
message=FALSE,
warning=FALSE,
cache=TRUE
)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'broom','kableExtra', 'DT'
), 'packages.bib')
# funciones auxiliares
inline <- function(x = "") paste0("`` `r ", x, "` ``")
inline2 <- function(x = "") paste0("`r ", x, "`")
colorize <- function(x, color = "blue") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
knitr::include_graphics("imagen-1.png")
packages <- c(
'bookdown', 'knitr', 'rmarkdown','scatterplot3d','plotly', 'tidyverse','rgl', 'lmtest','car', 'psych', 'DT', 'broom','kableExtra', 'GGally','plot3D', 'plot3Drgl'
)
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
